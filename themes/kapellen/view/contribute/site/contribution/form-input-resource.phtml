<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Omeka\Api\Representation\SiteRepresentation $site
 * @var \Omeka\Entity\User|null $user
 * @var \Contribute\Form\ContributeForm $form
 * @var \Contribute\Api\Representation\ContributionRepresentation|null $contribution
 * @var \Omeka\Api\Representation\AbstractResourceEntityRepresentation|null $resource
 * @var array $fields
 * @var \Omeka\Api\Representation\ResourceTemplateRepresentation $templateMedia A sub template for media may have no fields.
 * @var array $fieldsByMedia
 * @var array $fieldsMediaBase
 * @var string $action "add" or "edit" or "show"
 * @var string $mode "read" (for template select or for show readonly form before submit) or "write"
 * @var string $space "default" or "guest"
 *
 * @var string $submitLabel
 * @var string $cancelLabel
 * @var bool $isMainForm
 * @var bool $skipContributeCss
 *
 * When called recursively for sub-fields (media):
 * @var ?int $indexMedia
 * @var array $fieldsMedia
 *
 * @var \Laminas\View\Helper\Url $url
 * @var \Laminas\View\Helper\Partial $partial
 * @var \Laminas\View\Helper\EscapeHtml $escape
 * @var \Laminas\I18n\View\Helper\Translate $translate
 * @var \Laminas\View\Helper\EscapeHtmlAttr $escapeAttr
 * @var \Omeka\Api\Manager $apiManager
 * @var ?array $customVocabBaseTypes
 * @var array $valueResourceTypes
 * @var array $valueResourceQueries
 * @var callable $shortResourceTitle
 * @var string $baseUrlFiles
 * @var string $mode
 *
 * @var array $field
 * @var string $term
 * @var int $indexFieldInput
 * @var ?\Omeka\Api\Representation\ResourceTemplatePropertyRepresentation $templateProperty
 * @var ?\Omeka\Api\Representation\PropertyRepresentation $property
 * @var ?\Omeka\Api\Representation\ValueRepresentation $value
 * @var ?array $fieldContribution
 * @var ?int $indexContribution
 * @var bool $readonly
 */

$original = $fieldContribution['original'];
$proposed = $fieldContribution['proposed'];
$isPrivate = $value ? !$value->isPublic() : (isset($templateProperty) ? $templateProperty->isPrivate() : false);
$isRequired = !empty($field['required']) && (($indexContribution ?? null) === 0);

$name = $isMainForm
    ? sprintf('%s[%s][@resource]', $term, $indexFieldInput)
    : sprintf('media[%s][%s][%s][@resource]', $indexMedia, $term, $indexFieldInput);

$val = $proposed['@resource'] ?? $original['@resource'] ?? '';

$class = ['value'];
if ($isPrivate):
    $class[] = 'private';
endif;
$language = isset($proposed['@value']) ? null : (isset($original['value']) ? $original['value']->lang() : null);
?>
                                  
<div class="<?= implode(' ', $class) ?>" lang="<?= $escape($language) ?>">
    <div class="value resource<?= $isPrivate ? ' private' : '' ?>">
        <?php if ($isPrivate): ?>
        <span class="private fa fa-eye-slash" aria-hidden="false" title="<?= $translate('private') ?>"></span>
        <?php endif;

        // Display the value when no query is set.
        if (!isset($valueResourceQueries[$term])): ?>
        <?= $value ? $value->asHtml() : $proposed['@value'] ?>
        <?php else:
            // TODO Manage all resource types. Currently, items is forced when not set.
            $resourceValue = $value ? $value->valueResource() : null;
            $val = $proposed['@resource'] ?? $original['@resource'];
            $resourceName = $valueResourceTypes[$fieldContribution['type']] ?? 'items';
            $element = new \Omeka\Form\Element\ResourceSelect($name);
            $element
                ->setApiManager($apiManager);
            $element
                ->setResourceValueOptions($resourceName, $shortResourceTitle, $valueResourceQueries[$term]);
            $valueOptions = $element->getValueOptions();
            if ($resourceValue && !isset($valueOptions[$resourceValue->id()])):
                $element
                    ->setOption('prepend_value_options', [$resourceValue->id() => mb_substr($resourceValue->displayTitle(), 0, 80)])
                    ->setResourceValueOptions($resourceName, $shortResourceTitle, $valueResourceQueries[$term]);
            endif;
            $element
                ->setEmptyOption('')
                ->setAttributes([
                    'class' => 'form-control input-value chosen-select',
                    'required' => $isRequired,
                    'multiple' => false,
                    'data-value-key' => '@resource',
                    'aria-labelledby' => 'property-' . ($property ? $property->id() : '__PROPERTYID__') . '-label',
                    'data-placeholder' => $translate('Select a resourceâ€¦'),
                    'value' => $val,
                ]);
                if (!empty($readonly)) {
                    $element->setAttribute('readonly', 'readonly');
                }
            echo $this->formElement($element);
        endif; ?>
    </div>
    <ul class="actions">
        <li><button type="button" class="o-icon-delete remove-value" title="<?= $escapeAttr($translate('Remove value')) ?>" href="#" aria-label="<?= $escapeAttr($translate('Remove value')) ?>"></button></li>
    </ul>
</div>
